{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\new\\\\codikty_project\\\\frontend\\\\src\\\\components\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = ({\n  onRegister,\n  onClose,\n  onGenerateNewAccount,\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n    if (storedUsername && storedPassword) {\n      setUsername(storedUsername);\n      setPassword(storedPassword);\n    } else {\n      generateRandomCredentials();\n    }\n  }, []);\n  const generateRandomCredentials = async () => {\n    try {\n      const response = await fetch(\"/api/generate-credentials/\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setUsername(data.username);\n      setPassword(data.password);\n    } catch (error) {\n      console.error(\"Error fetching credentials:\", error);\n    }\n  };\n  const handleRegister = async () => {\n    try {\n      const response = await fetch(`/api/check-credentials/?username=${username}&password=${password}`);\n      const data = await response.json();\n      if (data.exists) {\n        setLoginError(\"Account already exists. Please log in.\");\n      } else {\n        const registerResponse = await fetch(\"/api/register/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        if (!registerResponse.ok) {\n          throw new Error(\"Registration failed\");\n        }\n        if (remember) {\n          localStorage.setItem(\"username\", username);\n          localStorage.setItem(\"password\", password);\n        }\n        onRegister({\n          username,\n          password,\n          remember\n        });\n        setLoginError(\"\");\n      }\n    } catch (error) {\n      setLoginError(\"An error occurred during registration.\");\n      console.error(\"Error during registration:\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(`/api/check-credentials/?username=${username}&password=${password}`);\n      const data = await response.json();\n      if (data.exists) {\n        if (remember) {\n          localStorage.setItem(\"username\", username);\n          localStorage.setItem(\"password\", password);\n        }\n        onLogin({\n          username,\n          password\n        });\n        setLoginError(\"\");\n      } else {\n        setLoginError(\"Account does not exist\");\n      }\n    } catch (error) {\n      setLoginError(\"An error occurred while checking the account.\");\n      console.error(\"Error checking account:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to CoDikty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your temporary username and password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"remember\",\n            checked: remember,\n            onChange: () => setRemember(!remember)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"remember\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onGenerateNewAccount,\n          children: \"Generate New Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Popup, \"AKO0yt6d6+hfMSaZz1SHNae9Xvs=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Popup","onRegister","onClose","onGenerateNewAccount","onLogin","_s","username","setUsername","password","setPassword","remember","setRemember","loginError","setLoginError","storedUsername","localStorage","getItem","storedPassword","generateRandomCredentials","response","fetch","ok","Error","data","json","error","console","handleRegister","exists","registerResponse","method","headers","body","JSON","stringify","setItem","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","id","checked","htmlFor","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/new/codikty_project/frontend/src/components/Popup.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Popup.css\";\n\nconst Popup = ({ onRegister, onClose, onGenerateNewAccount, onLogin }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n    if (storedUsername && storedPassword) {\n      setUsername(storedUsername);\n      setPassword(storedPassword);\n    } else {\n      generateRandomCredentials();\n    }\n  }, []);\n\n  const generateRandomCredentials = async () => {\n    try {\n      const response = await fetch(\"/api/generate-credentials/\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setUsername(data.username);\n      setPassword(data.password);\n    } catch (error) {\n      console.error(\"Error fetching credentials:\", error);\n    }\n  };\n\n  const handleRegister = async () => {\n    try {\n      const response = await fetch(\n        `/api/check-credentials/?username=${username}&password=${password}`\n      );\n      const data = await response.json();\n      if (data.exists) {\n        setLoginError(\"Account already exists. Please log in.\");\n      } else {\n        const registerResponse = await fetch(\"/api/register/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ username, password }),\n        });\n        if (!registerResponse.ok) {\n          throw new Error(\"Registration failed\");\n        }\n        if (remember) {\n          localStorage.setItem(\"username\", username);\n          localStorage.setItem(\"password\", password);\n        }\n        onRegister({ username, password, remember });\n        setLoginError(\"\");\n      }\n    } catch (error) {\n      setLoginError(\"An error occurred during registration.\");\n      console.error(\"Error during registration:\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\n        `/api/check-credentials/?username=${username}&password=${password}`\n      );\n      const data = await response.json();\n      if (data.exists) {\n        if (remember) {\n          localStorage.setItem(\"username\", username);\n          localStorage.setItem(\"password\", password);\n        }\n        onLogin({ username, password });\n        setLoginError(\"\");\n      } else {\n        setLoginError(\"Account does not exist\");\n      }\n    } catch (error) {\n      setLoginError(\"An error occurred while checking the account.\");\n      console.error(\"Error checking account:\", error);\n    }\n  };\n\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup\">\n        <div className=\"popup-content\">\n          <h2>Welcome to CoDikty</h2>\n          <p>Your temporary username and password:</p>\n          <div>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Password:</label>\n            <input\n              type=\"text\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"remember\"\n              checked={remember}\n              onChange={() => setRemember(!remember)}\n            />\n            <label htmlFor=\"remember\">Remember me</label>\n          </div>\n          {loginError && <p style={{ color: \"red\" }}>{loginError}</p>}\n          <button onClick={handleLogin}>Login</button>\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={onClose}>Close</button>\n          <button onClick={onGenerateNewAccount}>Generate New Account</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}